"""
File containing the main function analysis
"""
import subprocess

file_cite = "\\filecite"
def_cite = "\\defcite"

def pwd():
    process = subprocess.Popen("pwd".split(), stdout=subprocess.PIPE)
    output, error = process.communicate()
    print(output, error)

def file_latex_macro(cmd, code):
    return "\n\\newcommand" + cmd + "[3]{\n" + code + "\n}\n\n"

def write_latex_macro(file, data):
    if 'function_code' in data:
        file.write(file_latex_macro(file_cite, data['function_code']))
    else:
        print("[Error] Excpeted function_code")
        exit(1)

    if 'def_code' in data:
        file.write(file_latex_macro(def_cite, data['def_code']))
    else:
        print("[Error] Excpeted function_code")
        exit(1)

def analyse_file_name(data, file_name):
    if 'name' not in file_name:
        print("[Error] Missing name for the file: {}".format(str(file_name)))
        exit(1)
    name = file_name['name']
    if 'cmd' not in file_name:
        print("[Error] Missing cmd for the file: {}".format(str(file_name)))
        exit(1)


    # Find the file path
    ppath=data['project_path']
    cmd="find {} -name {}".format(ppath, name)
    process = subprocess.Popen(cmd.split(), stdout=subprocess.PIPE)
    output, error = process.communicate()

    path=str(output).replace("b\'"+ppath, '').replace('\\n\'', '')

    url = data['base_url'] + path

    return "\\newcommand\\{}{{{}{{{}}}{{{}}}{{{}}}}}\n\n".format(file_name['cmd'], file_cite, url, name, path)

def analyse_file_names(file, data):
    for f in data['files']:
        file.write(analyse_file_name(data, f))

def analyse_definitons(file, definitons):
    #file.write(str(definitons))
    pass

def analyse(data):
    # Testing if the configuration file contains the required information
    if 'base_url' not in data:
        print("[Error] Impossible to read the field \'base_url\'")
        exit(1)

    if 'project_path' not in data:
        print("[Error] Impossible to read the field \'project_path\'")
        exit(1)

    if 'output_file' not in data:
        print("[Error] Impossible to read the field \'base_url\'")
        exit(1)

    # Open output file
    try:
        f = open(data['output_file'], 'w')
        f.write("% This file is automatically generated by projectToLatexRef\n\n")

    except:
        print("Could not open {} output file...".format(data['output_file']))

    write_latex_macro(f, data)

    # Analyse part
    if 'files' in data:
        analyse_file_names(f, data)

    if 'definitions' in data:
        analyse_definitons(f, data)
        f.close()

